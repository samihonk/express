version: "3.7"

services:
    db:
        image: postgres:12-alpine
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - 8888:5432
        expose:
            - "5432"
    api:
        container_name: express-api
        environment:
            - DB_NAME=postgres
            - DB_PORT=5432
            - DB_HOST=db
            - DB_USERNAME=postgres
            - DB_PASSWORD=postgres
            - DB_DIALECT=postgres
            - PORT=8080
            - JWT_SECRET=secret
            - NODE_ENV=development
        build:
            context: .
            dockerfile: Dockerfile
            target: devAPi
        ports:
            - 8080:8080
        volumes:
            - ./server:/server
            - server_node_modules:/server/node_modules
        command: sh -c "yarn && yarn nm"
        depends_on:
            - db
    client:
        container_name: react-client
        build:
            context: .
            dockerfile: Dockerfile
            target: devClient
        ports:
            - 80:3000
        volumes:
            - ./client:/client
            - client_node_modules:/client/node_modules
        command: sh -c "yarn && yarn start"
        depends_on:
            - db
            - api
volumes:
    pgdata:
    client_node_modules:
    server_node_modules:
